1. Setting up project and git
2. Installing Chakra UI
    Installing the required dependencies.
    Add a Provider - ChakraProvider
    Wrap App component inside ChakraProvider
    Adding a Button
3.  Creating a Responsive Layout
    Setting templateAreas to define the layout of the grid
    Setting properties to object
4. Building the Navigation Bar
    Using <HStack /> - Horizontal Stack
    Using img in src as object
5. Implementing the Dark Mode
    import `extendTheme` function
    setting the configs
        calling extendTheme() and pass config as an object
        storing the theme in config
    In the App component using the ColorModeScript()
6. Building the Color Mode Switch
    Using custom hook useColorMode hook defined in Chakra
7. Fetching the Games
    Installing axios for sending http requests.
    Create an axios instance with a custom configuration
    Set the base url in config
    Export axios module
    A state variable for storing our game objects and initialize the update variable with an empty array
    A state variable for error messages and initialize the update variable with an empty string
    useEffect to send a fetch request to the backend
    Create an interface that represents the response object
8. Creating a Custom Hook for Fetching Games
    Moving the useState hooks and interfaces from component to customHook component
    In the customHook component return games state variable and error state variable
    Import the customHook component and destructure the state variables
    Using the cancel method and using abortController
9. Building Game Cards
    Exporting interfaces from custom hook
10. Displaying Playing Platform Icons
    Add Parent Platforms property to our Game interfaces
    Creating a separate component for displaying icons
11. Displaying Critic Score
    Creating an interface to define the shape of props
12. Getting Optimized Images
    Creating a function in the services folder which returns a updated url for cropping the image
13. Loading Skeletons
    Adding loading skeletons
    Declaring a loading state variable
14. Refactor - Removing Duplicated Styles
    Creating a separate card for container adding style to it to remove duplicate styles
15. Fetching the Genres
    Creating a custom hook for fetching genres
16. Creating a Generic Data Fetching Hook
    Using a generic type parameter
    setting a parameter in the component function of type string
17. Displaying the Genres
18. Showing a Spinner
    Showing a loader for genre list
19. Filtering Games by Genre
    Replacing the Text component with a clickable button in Genre List with variant link 
    Set onclick to a function
    Sharing a State between two Components by lifting it up to the closest Parent
    (In the Parent Component (App component) of the Child Component (GenreList and Gamegrid ) and declare a state variable for storing the selected genre)
20. Highlighting the Selected Genre
21. Building Platform Selector
22. Filtering Games by Platform
23. Refactoring: Extracting a Query Object
24. Building Sort Selector
    Building Sort Selector Component UI
25. Sorting Games
    Implementing Sorting Games Functionality
26. Handling Games Without an Image
27. Fixing the Issue with Chakra Menus
    Debugging the Chakra warning rendering on Console
28. Building Search Input
29. Searching Games
30. Adding a Dynamic Heading